export const medicalRecordContract = {
  address: "0x6a520891BB933f14a47B3efD81370ac9f83ECb43",
  abi: [
    { inputs: [], stateMutability: "nonpayable", type: "constructor" },
    {
      inputs: [
        { internalType: "address", name: "doctorAddr", type: "address" },
        { internalType: "string", name: "name", type: "string" },
        { internalType: "string", name: "specialty", type: "string" },
      ],
      name: "addEditDoctorData",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "id", type: "string" },
        { internalType: "string", name: "name", type: "string" },
        { internalType: "uint256", name: "weight", type: "uint256" },
        { internalType: "uint256", name: "height", type: "uint256" },
        { internalType: "string", name: "bloodGroup", type: "string" },
        { internalType: "uint256", name: "bloodPressure", type: "uint256" },
        { internalType: "bool", name: "covidVaccinated", type: "bool" },
      ],
      name: "addEditPatient",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "patientId", type: "string" },
        { internalType: "string", name: "date", type: "string" },
        { internalType: "string", name: "diagnosis", type: "string" },
        { internalType: "string", name: "prescription", type: "string" },
      ],
      name: "addVisitHistoryByDoctor",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        { internalType: "address", name: "doctorAddr", type: "address" },
        { internalType: "bool", name: "value", type: "bool" },
      ],
      name: "approveDoctor",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [{ internalType: "address", name: "doctor", type: "address" }],
      name: "getDoctor",
      outputs: [
        {
          components: [
            { internalType: "address", name: "etherAddress", type: "address" },
            { internalType: "string", name: "name", type: "string" },
            { internalType: "string", name: "specialty", type: "string" },
            { internalType: "bool", name: "isApproved", type: "bool" },
          ],
          internalType: "struct Example.Doctor",
          name: "",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "from", type: "uint256" },
        { internalType: "uint256", name: "to", type: "uint256" },
      ],
      name: "getDoctors",
      outputs: [
        { internalType: "uint256", name: "", type: "uint256" },
        { internalType: "address[]", name: "", type: "address[]" },
        { internalType: "string[]", name: "", type: "string[]" },
        { internalType: "string[]", name: "", type: "string[]" },
        { internalType: "bool[]", name: "", type: "bool[]" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "getDoctorsLength",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "id", type: "string" }],
      name: "getPatient",
      outputs: [
        {
          components: [
            { internalType: "string", name: "id", type: "string" },
            { internalType: "string", name: "name", type: "string" },
            { internalType: "uint256", name: "weight", type: "uint256" },
            { internalType: "uint256", name: "height", type: "uint256" },
            { internalType: "string", name: "bloodGroup", type: "string" },
            { internalType: "uint256", name: "bloodPressure", type: "uint256" },
            { internalType: "bool", name: "covidVaccinated", type: "bool" },
          ],
          internalType: "struct Example.Patient",
          name: "",
          type: "tuple",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "uint256", name: "from", type: "uint256" },
        { internalType: "uint256", name: "to", type: "uint256" },
      ],
      name: "getPatients",
      outputs: [
        { internalType: "uint256", name: "count", type: "uint256" },
        { internalType: "string[]", name: "id", type: "string[]" },
        { internalType: "string[]", name: "name", type: "string[]" },
        { internalType: "uint256[]", name: "weight", type: "uint256[]" },
        { internalType: "uint256[]", name: "height", type: "uint256[]" },
        { internalType: "string[]", name: "bloodGroup", type: "string[]" },
        { internalType: "uint256[]", name: "bloodPressure", type: "uint256[]" },
        { internalType: "bool[]", name: "covidVaccinated", type: "bool[]" },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "getPatientsLength",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "getRole",
      outputs: [{ internalType: "string", name: "status", type: "string" }],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [{ internalType: "string", name: "id", type: "string" }],
      name: "getVisitHistoriesByPatient",
      outputs: [
        {
          components: [
            { internalType: "string", name: "patientId", type: "string" },
            { internalType: "address", name: "doctorAddress", type: "address" },
            { internalType: "string", name: "date", type: "string" },
            { internalType: "string", name: "diagnosis", type: "string" },
            { internalType: "string", name: "prescription", type: "string" },
          ],
          internalType: "struct Example.VisitHistory[]",
          name: "",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        { internalType: "string", name: "name", type: "string" },
        { internalType: "string", name: "specialty", type: "string" },
      ],
      name: "register",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
} as const;
